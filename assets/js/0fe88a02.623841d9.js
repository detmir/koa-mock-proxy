"use strict";(self.webpackChunkkoa_mock_proxy=self.webpackChunkkoa_mock_proxy||[]).push([[798],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=p(r),d=o,k=c["".concat(s,".").concat(d)]||c[d]||u[d]||a;return r?n.createElement(k,i(i({ref:t},m),{},{components:r})):n.createElement(k,i({ref:t},m))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},1091:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>m,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var n=r(7462),o=(r(7294),r(3905));const a={toc:[{value:"Features",id:"features",level:2},{value:"Main advantages",id:"main-advantages",level:2},{value:"Installation",id:"installation",level:2},{value:"Working modes",id:"working-modes",level:2},{value:"Examples",id:"examples",level:2},{value:"Debugging",id:"debugging",level:2},{value:"UI",id:"ui",level:2}]};function i(e){let{components:t,...i}=e;return(0,o.kt)("wrapper",(0,n.Z)({},a,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"koa-mock-proxy"},"Koa mock proxy"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"koa-mock-proxy")," is a tool for creating proxy servers with possibility of record and replay responses (mocks)."),(0,o.kt)("p",null,"It can be useful for:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"service/integration tests (for example, when you want test only frontend)"),(0,o.kt)("li",{parentName:"ul"},"e2e tests where you want to isolate only chosen endpoints"),(0,o.kt)("li",{parentName:"ul"},"Manually testing application without backend or for a specific scenario that's difficult to reproduce"),(0,o.kt)("li",{parentName:"ul"},"Logging activity between services")),(0,o.kt)("p",null,"You are free to use all possibilities of Koa (custom middlewares like ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/koa-router"},"koa-router"),")."),(0,o.kt)("h2",{id:"features"},"Features"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Proxy http requests"),(0,o.kt)("li",{parentName:"ul"},"Record requests and responses (body and headers) into human-readable files"),(0,o.kt)("li",{parentName:"ul"},"Log proxy requests, viewing it using the UI"),(0,o.kt)("li",{parentName:"ul"},"Manage different test scenarios (depending on a scenario, the same endpoint can return different responses).")),(0,o.kt)("h2",{id:"main-advantages"},"Main advantages"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A public API made in a very familiar way for many JS developers (by applying middleware)"),(0,o.kt)("li",{parentName:"ul"},"Recorded mocks suitable to put in a version control system, easy to understand and update"),(0,o.kt)("li",{parentName:"ul"},"Composability with other libraries and code from custom mocks"),(0,o.kt)("li",{parentName:"ul"},"UI for easier debugging and recording of mocks")),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"Install using npm:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"npm i koa-mock-proxy")),(0,o.kt)("p",null,"Also, it's necessary to install koa, if you don't have it in your project:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"npm i koa")),(0,o.kt)("h2",{id:"working-modes"},"Working modes"),(0,o.kt)("p",null,"Server can work in the following modes:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"record"),". Server proxy requests to the ",(0,o.kt)("inlineCode",{parentName:"li"},"targetUrl")," and save responses to file."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"replay"),". Server read response from file. If there are no matching file, 404 error."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"replayOrProxy"),". Server read response from file. If there are no matching file, go to ",(0,o.kt)("inlineCode",{parentName:"li"},"targetUrl"),"."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"proxy"),". Server just proxy to the ",(0,o.kt)("inlineCode",{parentName:"li"},"targetUrl"))),(0,o.kt)("p",null,"Mode is determined by:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"mode")," param to mockProxy middleware"),(0,o.kt)("li",{parentName:"ol"},"Using middleware ",(0,o.kt)("inlineCode",{parentName:"li"},"mockProxyConfig")," (must be defined before ",(0,o.kt)("inlineCode",{parentName:"li"},"mockProxy")," middleware)"),(0,o.kt)("li",{parentName:"ol"},"Using environment variable ",(0,o.kt)("inlineCode",{parentName:"li"},"KOA_MOCK_PROXY_MODE"))),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("p",null,"The simplest implementation (proxy and record all requests):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import Koa from 'koa';\nimport { mockProxyMiddleware } from '@detmir/koa-mock-proxy';\n\nconst server = new Koa();\n\nserver.use(mockProxyMiddleware({\n  mocksDirectory: './mocks/',\n  targetUrl: 'http://my-service.com/api'\n}));\n\nserver.listen(9000);\n\n")),(0,o.kt)("p",null,"Proxy only a specific route:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"  import Koa from 'koa';\n  import Router from '@koa/router';\n  import { mockProxy, mockProxyConfig } from 'koa-mock-proxy';\n\n  const server = new Koa();\n  server.use(mockProxyConfig({\n    targetUrl: 'http://my-service.com/api'\n  }))\n\n  const userRouter = new Router();\n  // This route will record or replay depending on global configuration\n  userRouter.post('/users', mockProxy());\n\n  // This route will replay or proxy\n  userRouter.post('/users', mockProxy({ mode: 'replayOrProxy' }));\n\n  // this route proxy to custom url\n  userRouter.get('/user/:id', mockProxy({\n    mode: 'record',\n    targetUrl: 'http://my-service2.com/api'\n  }));\n\n  server.use(userRouter.routes());\n\n  server.use(koaMockProxy({\n    targetUrl: 'http://my-service.com/api'\n  }));\n\n  server.listen(9000);\n")),(0,o.kt)("p",null,"More complex examples are available ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/detmir/koa-mock-proxy/tree/main/examples"},"here"),"."),(0,o.kt)("h2",{id:"debugging"},"Debugging"),(0,o.kt)("p",null,"You can set env variable ",(0,o.kt)("inlineCode",{parentName:"p"},"DEBUG_PROXY=true")," if you want to see in console all requests coming through mock server."),(0,o.kt)("h2",{id:"ui"},"UI"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"UI",src:r(6762).Z,width:"1726",height:"854"})),(0,o.kt)("p",null,"In UI you can:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Explore requests log and response source (mock vs proxy)"),(0,o.kt)("li",{parentName:"ul"},"Set active scenarios"),(0,o.kt)("li",{parentName:"ul"},"Record selected requests to mock file (WIP)")),(0,o.kt)("p",null,"For using UI you need to apply ",(0,o.kt)("a",{parentName:"p",href:"/docs/api"},"controlMiddleware"),":"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"server.use(controlMiddleware({ path: '/mockproxy' }));")),(0,o.kt)("p",null,"After applying, UI will be available at the path ",(0,o.kt)("inlineCode",{parentName:"p"},"/mockproxy"),"."))}i.isMDXComponent=!0;const l={},s="Getting started",p={unversionedId:"intro",id:"intro",title:"Getting started",description:"",source:"@site/../docs/intro.mdx",sourceDirName:".",slug:"/intro",permalink:"/koa-mock-proxy/docs/intro",draft:!1,editUrl:"https://github.com/detmir/koa-mock-proxy/tree/main/docs/../docs/intro.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",next:{title:"Api description",permalink:"/koa-mock-proxy/docs/api"}},m={},u=[],c={toc:u};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getting-started"},"Getting started"),(0,o.kt)(i,{mdxType:"Readme"}))}d.isMDXComponent=!0},6762:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/ui-b9d24623399ae447abdd7b63878e2fbf.png"}}]);